name: Lint, Test, Secure

on:
  push:
    branches:
      - main
      - "feat/*"
      - "fix/*"

  pull_request:
    branches:
      - main

env:
  PYTHON-VERSION: 3.12.2

jobs:
  lint:
    runs-on: ubuntu-latest
    continue-on-error: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: ${{env.PYTHON-VERSION}}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{runner.os}}-pip-${{hashFiles('**/requirements.txt')}}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependancies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 autopep8

      - name: Check formatting (autopep8)
        run: autopep8 --diff --exit-code -r .

      - name: Run Flake8 (PEP 8 lint)
        run: flake8 .

      - name: Install app libraries
        run: pip install -r requirements.txt

  test:
    runs-on: ubuntu-latest
    continue-on-error: false
    needs: lint

    steps:
      # 1. Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Set up python
      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: ${{env.PYTHON-VERSION}}

      # 3. Install dependancies
      - name: Install dependancies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install python-dotenv
          pip freeze | grep python-dotenv >> requirements.txt

      # 4. Run the tests
      # fail the test if coverage is less than 80
      # coverage report -m --fail-under=80
      - name: Run tests
        run: |
          python -m unittest discover -s tests
          coverage run -m unittest discover -s tests
          coverage report -m
